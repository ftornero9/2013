OBJECT Page 88209 Documentos Recibidos SII
{
  OBJECT-PROPERTIES
  {
    Date=22/07/17;
    Time=11:58:29;
    Modified=Yes;
    Version List=SII;
  }
  PROPERTIES
  {
    CaptionML=[ENU=SII received documents;
               ESP=Documentos Recibidos SII];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=Yes;
    SourceTable=Table88208;
    SourceTableView=SORTING(TipoSII,Bien de inversion,Tipo,Documento,Fecha)
                    WHERE(TipoSII=CONST(R),
                          Tipo=FILTER(Factura|Pago),
                          Bien de inversion=CONST(No));
    PageType=List;
    OnOpenPage=BEGIN
                 GlbSII.SetGblEmpresa(qEmpresa);
                 IF qEmpresa <> '' THEN
                   CHANGECOMPANY(qEmpresa);

                 IF FunSII.EjecutarProcesoAutMovsIVA THEN BEGIN
                   ProcesarMovsIVA.USEREQUESTPAGE(FALSE);
                   ProcesarMovsIVA.RUN;
                 END;
               END;

    ActionList=ACTIONS
    {
      { 1000000011;  ;ActionContainer;
                      Name=SII;
                      ActionContainerType=ActionItems }
      { 1000000016;1 ;Action    ;
                      Name=Enviar;
                      CaptionML=[ENU=Send;
                                 ESP=Enviar];
                      Image=SendTo;
                      OnAction=BEGIN
                                 //qEmpresa := GlbSII.GetGblEmpresa;
                                 IF qEmpresa <> '' THEN BEGIN
                                   CfgSII.CHANGECOMPANY(qEmpresa);
                                   qRec.CHANGECOMPANY(qEmpresa);
                                 END;

                                 CfgSII.GET;
                                 CfgSII."Agrupar env¡os" := FALSE;

                                 IF CfgSII."Agrupar env¡os" OR CfgSII."Gesti¢n externa env¡os" THEN BEGIN
                                   tmpDocSII.DELETEALL;
                                   DT := CURRENTDATETIME;
                                   CurrPage.SETSELECTIONFILTER(qRec);

                                   // FACTURAS
                                   qRec.SETRANGE(Tipo, Tipo::Factura);
                                   IF qRec.FIND('-') THEN BEGIN
                                     REPEAT
                                       tmpDocSII.NMov := qRec.NMov;
                                       tmpDocSII.INSERT;
                                     UNTIL qRec.NEXT = 0;
                                     IF CfgSII."Agrupar env¡os" THEN
                                       FunSII.EnviarRecibidosAgrupados(tmpDocSII)
                                     ELSE BEGIN
                                       FileName := FunSII.GenXMLRecibidosAgrupados(tmpDocSII, 2);
                                       IF FileName <> '' THEN
                                         MESSAGE(Text002, FileName);
                                     END;
                                   END;

                                   // PAGOS
                                   tmpDocSII.DELETEALL;
                                   qRec.SETRANGE(Tipo, Tipo::Pago);
                                   IF qRec.FIND('-') THEN BEGIN
                                     REPEAT
                                       tmpDocSII.NMov := qRec.NMov;
                                       tmpDocSII.INSERT;
                                       UNTIL qRec.NEXT = 0;
                                       IF CfgSII."Agrupar env¡os" THEN
                                         FunSII.EnviarPagoRecibidasAgrupados(tmpDocSII)
                                       ELSE BEGIN
                                         FileName := FunSII.GenXMLPagoRecibidasAgrupados(tmpDocSII, 2);
                                         IF FileName <> '' THEN
                                           MESSAGE(Text002, FileName);
                                       END;
                                     END;

                                 END  ELSE BEGIN
                                   CurrPage.SETSELECTIONFILTER(qRec);
                                   IF qRec.FIND('-') THEN  REPEAT
                                     IF qRec.Tipo = qRec.Tipo::Factura THEN
                                       FunSII.EnviarDocRecibido(qRec);
                                     IF qRec.Tipo = qRec.Tipo::Pago THEN
                                       FunSII.EnviarPagoRecibidas(qRec);
                                   UNTIL qRec.NEXT = 0;
                                 END;
                               END;
                                }
      { 1000000019;1 ;Separator  }
      { 1000000045;1 ;ActionGroup;
                      Name=Contrastar;
                      CaptionML=[ENU="Checkout ";
                                 ESP=Contrastar] }
      { 1000000046;2 ;Action    ;
                      Name=Periodo;
                      CaptionML=[ENU=Period;
                                 ESP=Periodo];
                      Image=AdjustEntries;
                      OnAction=BEGIN
                                 qRec := Rec;
                                 qRec.NIF := '';
                                 qRec.RazonSocial := '';
                                 FunSII.ContrastarDocRecibidos(qRec);
                               END;
                                }
      { 1000000047;2 ;Action    ;
                      Name=Periodo y NIF;
                      CaptionML=[ENU=Period & VAT No;
                                 ESP=Periodo y NIF];
                      Image=ApplyEntries;
                      OnAction=BEGIN
                                 FunSII.ContrastarDocRecibidos(Rec);
                               END;
                                }
      { 1000000044;1 ;Separator  }
      { 1000000012;1 ;ActionGroup;
                      Name=Consulta;
                      CaptionML=[ENU=Consult;
                                 ESP=Consulta];
                      Image=GetSourceDoc }
      { 1000000042;2 ;Action    ;
                      Name=Periodo1;
                      CaptionML=[ENU=Period;
                                 ESP=Periodo];
                      Image=GetSourceDoc;
                      OnAction=BEGIN
                                 qRec := Rec;
                                 qRec.NIF := '';
                                 qRec.RazonSocial := '';

                                 IF Tipo = Tipo::Factura THEN
                                   FunSII.ConDocRecibidosEnviados(qRec);

                                 IF Tipo = Tipo::Pago THEN
                                   FunSII.ConPagoRecibidas(Rec);
                               END;
                                }
      { 1000000043;2 ;Action    ;
                      Name=Periodo y NIF1;
                      CaptionML=[ENU=Period & VAT No;
                                 ESP=Periodo y NIF];
                      Image=GetSourceDoc;
                      OnAction=BEGIN
                                 IF Tipo = Tipo::Factura THEN
                                   FunSII.ConDocRecibidosEnviados(Rec);

                                 IF Tipo = Tipo::Pago THEN
                                   FunSII.ConPagoRecibidas(Rec);
                               END;
                                }
      { 1000000036;1 ;Action    ;
                      Name=Refrescar;
                      CaptionML=[ENU=Refresh;
                                 ESP=Refrescar];
                      Image=UpdateXML;
                      OnAction=BEGIN
                                 //qEmpresa := GlbSII.GetGblEmpresa;
                                 IF qEmpresa <> '' THEN
                                   qRec.CHANGECOMPANY(qEmpresa);

                                 CurrPage.SETSELECTIONFILTER(qRec);
                                 IF qRec.FIND('-') THEN  REPEAT
                                   FunSII.RefrescarDocSII(qRec);
                                 UNTIL qRec.NEXT = 0;
                               END;
                                }
      { 1000000035;1 ;Separator  }
      { 1000000032;1 ;Action    ;
                      Name=Comprobar NIF;
                      CaptionML=[ENU=Check VAT No;
                                 ESP=Comprobar NIF];
                      Image=User;
                      OnAction=BEGIN
                                 //qEmpresa := GlbSII.GetGblEmpresa;
                                 IF qEmpresa <> '' THEN
                                   qRec.CHANGECOMPANY(qEmpresa);

                                 CurrPage.SETSELECTIONFILTER(qRec);
                                 IF qRec.FIND('-') THEN  REPEAT
                                   WebSII.CalidadDatos(qRec.NIF, qRec.RazonSocial, FALSE);
                                 UNTIL qRec.NEXT = 0;
                               END;
                                }
      { 1000000031;1 ;Separator  }
      { 1000000020;1 ;Action    ;
                      Name=Anular;
                      CaptionML=[ENU=Void send;
                                 ESP=Anular];
                      Image=ReverseRegister;
                      OnAction=BEGIN
                                 //qEmpresa := GlbSII.GetGblEmpresa;
                                 IF qEmpresa <> '' THEN BEGIN
                                   qRec.CHANGECOMPANY(qEmpresa);
                                 END;

                                 IF CONFIRM(Text001, FALSE) THEN BEGIN
                                   DT := CURRENTDATETIME;
                                   CurrPage.SETSELECTIONFILTER(qRec);
                                   IF qRec.FIND('-') THEN  REPEAT
                                     FunSII.AnularDocRecibido(qRec, DT);
                                   UNTIL qRec.NEXT = 0;
                                 END;
                               END;
                                }
      { 1000000013;1 ;ActionGroup;
                      Name=XML }
      { 1000000014;2 ;Action    ;
                      Name=Ver;
                      CaptionML=[ENU=View;
                                 ESP=Ver];
                      Image=XMLFile;
                      OnAction=BEGIN
                                 //qEmpresa := GlbSII.GetGblEmpresa;
                                 IF qEmpresa <> '' THEN BEGIN
                                   CfgSII.CHANGECOMPANY(qEmpresa);
                                   qRec.CHANGECOMPANY(qEmpresa);
                                 END;

                                 CfgSII.GET;
                                 IF CfgSII."Agrupar env¡os" OR CfgSII."Gesti¢n externa env¡os" THEN BEGIN
                                   tmpDocSII.DELETEALL;
                                   CurrPage.SETSELECTIONFILTER(qRec);
                                   qRec.SETRANGE(Tipo, Tipo::Factura);
                                   IF qRec.FIND('-') THEN BEGIN
                                     REPEAT
                                       tmpDocSII.NMov := qRec.NMov;
                                       tmpDocSII.INSERT;
                                     UNTIL qRec.NEXT = 0;
                                     FunSII.GenXMLRecibidosAgrupados(tmpDocSII, 0);
                                   END;

                                   qRec.SETRANGE(Tipo, Tipo::Pago);
                                   IF qRec.FIND('-') THEN BEGIN
                                     tmpDocSII.DELETEALL;
                                     REPEAT
                                       tmpDocSII.NMov := qRec.NMov;
                                       tmpDocSII.INSERT;
                                     UNTIL qRec.NEXT = 0;
                                     FunSII.GenXMLPagoRecibidasAgrupados(tmpDocSII, 0);
                                   END;

                                 END  ELSE BEGIN
                                   IF Tipo = Tipo::Factura THEN
                                     FunSII.GenerarXMLDocRecibido(Rec, FALSE);
                                   IF Tipo = Tipo::Pago THEN
                                     FunSII.GenerarXMLPagoRecibidas(Rec, FALSE);
                                 END;
                               END;
                                }
      { 1000000015;2 ;Action    ;
                      Name=Exportar;
                      CaptionML=[ENU=Export;
                                 ESP=Exportar];
                      Image=XMLFile;
                      OnAction=BEGIN
                                 //qEmpresa := GlbSII.GetGblEmpresa;
                                 IF qEmpresa <> '' THEN BEGIN
                                   CfgSII.CHANGECOMPANY(qEmpresa);
                                   qRec.CHANGECOMPANY(qEmpresa);
                                 END;

                                 CfgSII.GET;
                                 IF CfgSII."Agrupar env¡os" OR CfgSII."Gesti¢n externa env¡os" THEN BEGIN
                                   tmpDocSII.DELETEALL;
                                   CurrPage.SETSELECTIONFILTER(qRec);
                                   qRec.SETRANGE(Tipo, Tipo::Factura);
                                   IF qRec.FIND('-') THEN BEGIN
                                     REPEAT
                                       tmpDocSII.NMov := qRec.NMov;
                                       tmpDocSII.INSERT;
                                     UNTIL qRec.NEXT = 0;
                                     FunSII.GenXMLRecibidosAgrupados(tmpDocSII, 1);
                                   END;

                                   qRec.SETRANGE(Tipo, Tipo::Pago);
                                   IF qRec.FIND('-') THEN BEGIN
                                     tmpDocSII.DELETEALL;
                                     REPEAT
                                       tmpDocSII.NMov := qRec.NMov;
                                       tmpDocSII.INSERT;
                                     UNTIL qRec.NEXT = 0;
                                     FunSII.GenXMLPagoRecibidasAgrupados(tmpDocSII, 1);
                                   END;

                                 END  ELSE BEGIN
                                   IF Tipo = Tipo::Factura THEN
                                     FunSII.GenerarXMLDocRecibido(Rec, TRUE);
                                   IF Tipo = Tipo::Pago THEN
                                     FunSII.GenerarXMLPagoRecibidas(Rec, TRUE);
                                 END;
                               END;
                                }
      { 1000000030;1 ;Action    ;
                      Name=Navegar;
                      CaptionML=[ENU=&Navigate;
                                 ESP=&Navegar];
                      Promoted=Yes;
                      Image=Navigate;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Navigate.SetDoc(Fecha,Documento);
                                 Navigate.RUN;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1000000033;2;Field  ;
                SourceExpr=Tipo;
                Editable=FALSE }

    { 1000000002;2;Field  ;
                SourceExpr=Documento;
                Editable=FALSE }

    { 1000000003;2;Field  ;
                SourceExpr=Fecha;
                Enabled=FALSE }

    { 1000000034;2;Field  ;
                SourceExpr="No enviar" }

    { 1000000004;2;Field  ;
                SourceExpr=NIF }

    { 1000000052;2;Field  ;
                SourceExpr=IDOtro }

    { 1000000054;2;Field  ;
                SourceExpr=IDTipo }

    { 1000000017;2;Field  ;
                SourceExpr="Cod. pais" }

    { 1000000041;2;Field  ;
                SourceExpr="Factura DUA" }

    { 1000000018;2;Field  ;
                SourceExpr="Tipo factura" }

    { 1000000005;2;Field  ;
                SourceExpr=RazonSocial }

    { 1000000050;2;Field  ;
                SourceExpr=DocumentoTercero }

    { 1000000051;2;Field  ;
                SourceExpr="Fecha documento" }

    { 1000000057;2;Field  ;
                SourceExpr="Creation date" }

    { 1000000049;2;Field  ;
                SourceExpr="Fecha operacion" }

    { 1000000006;2;Field  ;
                SourceExpr=NumTercero }

    { 1000000007;2;Field  ;
                SourceExpr="Estado env¡o";
                Editable=FALSE }

    { 1000000008;2;Field  ;
                SourceExpr="Tipo envio";
                Editable=FALSE }

    { 1000000009;2;Field  ;
                SourceExpr=Env¡os;
                Editable=FALSE }

    { 1000000010;2;Field  ;
                SourceExpr=TextoRegistro }

    { 1000000021;2;Field  ;
                SourceExpr="Clave operacion" }

    { 1000000058;2;Field  ;
                SourceExpr="Lineas documento" }

    { 1000000022;2;Field  ;
                SourceExpr=Base }

    { 1000000023;2;Field  ;
                SourceExpr=Cuota }

    { 1000000048;2;Field  ;
                SourceExpr="Cuota deducible" }

    { 1000000037;2;Field  ;
                SourceExpr="Base no realizada" }

    { 1000000038;2;Field  ;
                SourceExpr="Cuota no realizada" }

    { 1000000056;2;Field  ;
                SourceExpr="Tipo factura rectificativa" }

    { 1000000055;2;Field  ;
                SourceExpr="Factura corregida" }

    { 1000000053;2;Field  ;
                SourceExpr="Fecha factura corregida" }

    { 1000000029;2;Field  ;
                SourceExpr="Bien de inversion" }

    { 1000000024;2;Field  ;
                SourceExpr="Timestamp presentaci¢n" }

    { 1000000025;2;Field  ;
                SourceExpr="Tipo comunicaci¢n" }

    { 1000000026;2;Field  ;
                SourceExpr=CSV }

    { 1000000039;2;Field  ;
                SourceExpr="Estado cuadre" }

    { 1000000040;2;Field  ;
                SourceExpr="Timestamp cuadre" }

    { 1000000027;2;Field  ;
                SourceExpr="Codigo Error" }

    { 1000000028;2;Field  ;
                SourceExpr="Descripcion Error" }

  }
  CODE
  {
    VAR
      FunSII@1000000000 : Codeunit 88201;
      qEmpresa@1000000003 : Text[30];
      Text001@1000000004 : TextConst 'ENU=Ejecutar proceso de anulaci¢n';
      ProcesarMovsIVA@1000000001 : Report 88201;
      Navigate@1000000002 : Page 344;
      GlbSII@1000000005 : Codeunit 88200;
      WebSII@1000000006 : Codeunit 88202;
      qRec@1000000011 : Record 88208;
      tmpDocSII@1000000010 : TEMPORARY Record 88208;
      CfgSII@1000000009 : Record 88201;
      DT@1000000008 : DateTime;
      FileName@1000000007 : Text[1024];
      Text002@1000000012 : TextConst 'ENU=File %1, created.;ESP=Fichero %1, creado.';

    PROCEDURE DefEmpresa@1000000000(PasoEmpresa@1000000000 : Text[30]);
    BEGIN
      qEmpresa := PasoEmpresa;
    END;

    BEGIN
    END.
  }
}

